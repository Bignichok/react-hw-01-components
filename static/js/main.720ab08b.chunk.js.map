{"version":3,"sources":["components/Profile/Stats/Stats.module.css","components/Profile/Description/Description.module.css","components/FriendsList/FriendsListItem/FriendsListItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/Statistics/StatisticsItem/StatisticsItem.module.css","components/Profile/Profile.module.css","components/FriendsList/FriendList.module.css","components/Profile/Description/Description.jsx","components/Profile/Stats/Stats.jsx","components/Profile/Profile.jsx","components/Statistics/StatisticsItem/StatisticsItem.jsx","randomRgbColor.js","components/Statistics/Statistics.jsx","components/FriendsList/FriendsListItem/FriendsListItem.jsx","components/FriendsList/FriendList.jsx","components/TransactionHistory/TransactionHistoryRow/TransactionHistoryRow.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Description","name","tag","location","avatar","className","styles","description","src","alt","Stats","stats","statsWrp","statsItem","label","quantity","followers","views","likes","Profile","profile","defaultProps","StatisticsItem","percentage","color","item","style","backgroundColor","randomRgbColor","Math","floor","random","toString","slice","length","Statistics","title","statistics","statList","map","id","key","FriendsListItem","isOnlineClasses","isOnline","online","offline","width","FriendsList","friends","friendsList","TransactionHistory","type","amount","currency","transactionData","transactionHistory","tableHead","tableHeadRow","tableBody","TransactionHistoryRow","App","user","Boolean","window","hostname","match","ReactDOM","render","StrictMode","statisticalData","friendsData","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.720ab08b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsWrp\":\"Stats_statsWrp__1iZn1\",\"statsItem\":\"Stats_statsItem__10uEX\",\"label\":\"Stats_label__2ou9s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Description_description__3Jdc_\",\"avatar\":\"Description_avatar__2oR1v\",\"name\":\"Description_name__1YnVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendsListItem_item__nGwD8\",\"status\":\"FriendsListItem_status__2z3JS\",\"online\":\"FriendsListItem_online__PNI3y FriendsListItem_status__2z3JS\",\"offline\":\"FriendsListItem_offline__Thf9f FriendsListItem_status__2z3JS\",\"avatar\":\"FriendsListItem_avatar__bGq_U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__w08-7\",\"tableHead\":\"TransactionHistory_tableHead__3P1S9\",\"tableBody\":\"TransactionHistory_tableBody__3rnUn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__36phE\",\"title\":\"Statistics_title__xUzXI\",\"statList\":\"Statistics_statList__2EM-I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"StatisticsItem_item__2I1d2\",\"label\":\"StatisticsItem_label__Ppphq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1BXbh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsList\":\"FriendList_friendsList__327HT\"};","import React from \"react\";\r\nimport styles from \"./Description.module.css\";\r\n\r\nconst Description = ({ name, tag, location, avatar }) => {\r\n  return (\r\n    <div className={styles.description}>\r\n      <img src={avatar} alt={name} className={styles.avatar} />\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.tag}>{tag}</p>\r\n      <p className={styles.location}>{location}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Description;\r\n","import React from \"react\";\r\nimport styles from \"./Stats.module.css\";\r\n\r\nconst Stats = ({ stats }) => {\r\n  return (\r\n    <ul className={styles.statsWrp}>\r\n      <li className={styles.statsItem}>\r\n        <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{stats.followers}</span>\r\n      </li>\r\n      <li className={styles.statsItem}>\r\n        <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{stats.views}</span>\r\n      </li>\r\n      <li className={styles.statsItem}>\r\n        <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Description from \"./Description/Description\";\r\nimport styles from \"./Profile.module.css\";\r\nimport Stats from \"./Stats/Stats\";\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <Description name={name} tag={tag} location={location} avatar={avatar} />\r\n      <Stats stats={stats} />\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.defaultProps = {\r\n  name: \"name\",\r\n  tag: \"\",\r\n  location: \"Planet Earth\",\r\n  avatar:\r\n    \"https://www.minervastrategies.com/wp-content/uploads/2016/03/default-avatar.jpg\",\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.object,\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport styles from \"./StatisticsItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StatisticsItem = ({ label, percentage, color }) => {\r\n  return (\r\n    <li className={styles.item} style={{ backgroundColor: `${color}` }}>\r\n      <span className={styles.label}>{label}</span>\r\n      <span className=\"percentage\">{percentage}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nStatisticsItem.propTypes = {\r\n  label: PropTypes.string,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default StatisticsItem;\r\n","const randomRgbColor = () => {\r\n  const color = Math.floor(Math.random() * 16777216).toString(16);\r\n\r\n  return \"#000000\".slice(0, -color.length) + color;\r\n};\r\n\r\nexport default randomRgbColor;\r\n","import React from \"react\";\r\nimport styles from \"./Statistics.module.css\";\r\nimport StatisticsItem from \"./StatisticsItem/StatisticsItem\";\r\nimport randomRgbColor from \"../../randomRgbColor.js\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return !!stats.length && \r\n    <section className={styles.statistics}>\r\n      {title && <h2 className={styles.title}>{title}</h2>}\r\n      <ul className={styles.statList}>\r\n        {stats.map(({ id, label, percentage }) => {\r\n          const color = randomRgbColor();\r\n            return (\r\n              <StatisticsItem\r\n                key={id}\r\n                label={label}\r\n                percentage={percentage}\r\n                color={color}\r\n              />\r\n            );\r\n          })}</ul>\r\n    </section>\r\n  \r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport styles from \"./FriendsListItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FriendsListItem = ({ avatar, name, isOnline }) => {\r\n  //   const isOnlineClasses = [styles.status, isOnline ? styles.online : styles.offline];\r\n  const isOnlineClasses = isOnline ? styles.online : styles.offline;\r\n  return (\r\n    <li className={styles.item}>\r\n      {/* <span className={isOnlineClasses.join(\" \")}></span> */}\r\n      <span className={isOnlineClasses}></span>\r\n      <img className={styles.avatar} src={avatar} alt=\"\" width=\"60\" />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendsListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nFriendsListItem.defaultProps = {\r\n  name: \"name\",\r\n  avatar:\r\n    \"https://www.minervastrategies.com/wp-content/uploads/2016/03/default-avatar.jpg\",\r\n  isOnline: false,\r\n};\r\n\r\nexport default FriendsListItem;\r\n","import React from \"react\";\r\nimport styles from \"./FriendList.module.css\";\r\nimport FriendsListItem from \"./FriendsListItem/FriendsListItem\";\r\n\r\nconst FriendsList = ({ friends }) => {\r\n  return !!friends &&  <ul className={styles.friendsList}>\r\n      {friends.map(({ id, avatar, name, isOnline }) =>\r\n        (<FriendsListItem\r\n          key={id}\r\n          avatar={avatar}\r\n          name={name}\r\n          isOnline={isOnline} />\r\n        ))}\r\n    </ul>;\r\n}\r\n\r\n\r\nexport default FriendsList;\r\n","import React from \"react\";\r\nimport styles from \"./TransactionHistoryRow.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TransactionHistory = ({ type, amount, currency }) => {\r\n  return (\r\n    <tr>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\r\nimport styles from \"./TransactionHistory.module.css\";\r\nimport TransactionHistoryRow from \"./TransactionHistoryRow/TransactionHistoryRow.jsx\";\r\n\r\nconst TransactionHistory = ({ transactionData }) => {\r\n  \r\n  return !!transactionData &&\r\n    <table className={styles.transactionHistory}>\r\n      <thead className={styles.tableHead}>\r\n        <tr className={styles.tableHeadRow}>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody className={styles.tableBody}>\r\n        {transactionData.map(({ id, type, amount, currency }) => (\r\n          <TransactionHistoryRow\r\n            key={id}\r\n            type={type}\r\n            amount={amount}\r\n            currency={currency}\r\n          />\r\n        )\r\n      )}</tbody>\r\n    </table>\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Profile from \"./components/Profile/Profile.jsx\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FriendsList from \"./components/FriendsList/FriendList\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\n\nfunction App({ user, stats, friends, transactionData }) {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title={\"Upload stats\"} stats={stats} />\n      <FriendsList friends={friends} />\n      <TransactionHistory transactionData={transactionData} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n//data\nimport user from \"./db/user.json\";\nimport statisticalData from \"./db/statistical-data.json\";\nimport friendsData from \"./db/friends.json\";\nimport transactionData from \"./db/transaction-data.json\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App\n      user={user}\n      stats={statisticalData}\n      friends={friendsData}\n      transactionData={transactionData}\n    />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}